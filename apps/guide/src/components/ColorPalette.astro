---
import colors from '@src/data/colors.json'
import Swatch from '@components/Swatch.astro'

const colorPalette = Object.entries(colors)
---

<div class='controls'>
  <label for='layout'>Layout</label>
  <input type='checkbox' id='layout' name='layout' />

  <label for='showLabels'>Show Labels</label>
  <input type='checkbox' id='showLabels' name='showLabels' />
</div>

<div class='color-palette'>
  {
    colorPalette.map(color => {
      if (typeof color[1] === 'string') {
        console.log(color[1])
        return
      }

      const shades = Object.entries(color[1])
      // console.log(shades);
      return (
        <div class='palette'>
          <p class='label'>{color[0]}</p>
          <ul class='shades'>
            {shades.map(shade => (
              <li>
                <Swatch name={`${color[0]}-${shade[0]}`} value={shade[1]} />
              </li>
            ))}
          </ul>
        </div>
      )
    })
  }
</div>

<style lang='scss'>
  input {
    appearance: unset;
  }

  ul,
  li {
    margin: 0;
    padding: 0;
    list-style: none;
  }

  .color-palette {
    display: flex;
    flex-direction: row;
    flex-wrap: wrap;
  }

  .palette {
    flex-grow: 1;
    flex-basis: clamp(80px, 14%, 240px);
  }

  .shades {
    display: flex;
    flex-direction: column;
    flex-grow: 1;

    li {
      flex-grow: 1;
    }
  }

  .label {
    @include transition();
    @include show(on);
    max-height: space(3);
  }

  .controls:has(#layout:checked) ~ .color-palette {
    flex-direction: column;
    flex-wrap: nowrap;

    .shades {
      flex-direction: row;
    }
  }

  .controls:has(#showLabels:checked) ~ .color-palette {
    .label {
      max-height: 0;
      @include show(off);
      margin: 0;
      transform: translate3d(0, -50%, 0);
    }
  }
</style>
