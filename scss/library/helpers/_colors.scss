//-------------------------------------------------------------------
// Color Helper Functions
//-------------------------------------------------------------------

@function color($pallete, $shade: 1, $alpha: 1) {
    @if map-has-key($colors, $pallete) {
        $color: map-get($colors, $pallete);
        $type: type-of($color);
        @if $type == 'map' {
            @if map-has-key(map-get($colors, $pallete), $shade) {
                $color: map-deep-get($colors, $pallete, $shade);
            } @else {
                @warn errorMessage($shade, 'tokens/_colors.scss');
                @return null;
            }
        } @else {
            $alpha: $shade;
            $color: map-get($colors, $pallete);
        }
        @return rgba($color, $alpha);
    }

    @warn errorMessage($pallete, 'tokens/_colors.scss');
    @return null;
}

@function font-color($shade, $strength: strong) {
    @if map-has-key($font-colors, $shade) {
        $color: map-get($font-colors, $shade);
        $type: type-of($color);
        @if $type == 'map' {
            @if map-has-key(map-get($font-colors, $shade), $strength) {
                $color: map-deep-get($font-colors, $shade, $strength);
            } @else {
                @warn errorMessage($strength, 'tokens/_colors.scss');
                @return null;
            }
        } @else {
            $color: map-get($font-colors, $shade);
        }
        @return $color;
    }
    @warn errorMessage($shade, 'tokens/_colors.scss');
    @return null;
}

@mixin font-color($shade, $strength: 'strong') {
    color: font-color($shade, $strength);
}
