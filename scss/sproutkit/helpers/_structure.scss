@use 'sass:string';

// Dimensions
//-------------------------------------------------------------------
// D stands for Dimension

@function space($scale) {
    $base: 8px;
    @return $base * $scale;
}

// Screen size
//-------------------------------------------------------------------
@function screen($size) {
    @if map-has-key($screen-sizes, $size) {
        $size: map-get($screen-sizes, $size);
        @return $size;
    }
    @warn errorMessage($size, $screen-sizes, 'tokens/_structure.scss');
    @return null;
}

// Z-Index
//-------------------------------------------------------------------
@function z($index, $modifer: '') {
    $z-base: 10;
    @return pow($z-base, $index) + $modifer;
}

// Lines
//-------------------------------------------------------------------

@function line-color($color: normal) {
    @if map-has-key($line-colors, $color) {
        $color: map-get($line-colors, $color);
        @return $color;
    }
    @warn errorMessage($color, $line-colors, 'tokens/_structure.scss');
    @return null;
}

@function line($style: normal) {
    @if map-has-key($lines, $style) {
        $style: map-get($lines, $style);
        @return $style;
    }
    @warn errorMessage($style, $lines, 'tokens/_structure.scss');
    @return null;
}

@function shadowLine($color: normal, $edge: 'bottom', $stroke-weight: 1px) {
    @if map-has-key($line-colors, $color) {
        $color: map-get($line-colors, $color);
    }
    @if ($edge == 'top') {
        @return 0 -$stroke-weight 0 0 #{$color};
    } @else if ($edge == 'left') {
        @return -$stroke-weight 0 0 0 #{$color};
    } @else if ($edge == 'right') {
        @return $stroke-weight 0 0 0 #{$color};
    } @else if ($edge == 'bottom') {
        @return 0 $stroke-weight 0 0 #{$color};
    } @else if ($edge == 'outline') {
        @return 0 0 0 $stroke-weight #{$color};
    }
    @warn errorMessage($color, $line-colors, 'tokens/_structure.scss');
    @return null;
}

// Border Radius
//-------------------------------------------------------------------

@function radius($size) {
    $size: '#{$size}';

    @if map-has-key($radii, $size) {
        $size: map-get($radii, $size);
        @return $size;
    }
    @warn errorMessage($size, $radii, 'tokens/_structure.scss');
    @return null;
}

// Drop Shadows
//-------------------------------------------------------------------

@function shadow($level) {
    @if map-has-key($shadows, $level) {
        $shadow-color: color('gray-900', 0.2);

        $level: map-get($shadows, $level);
        @return $level;
    }
    @warn errorMessage($level, $shadows, 'tokens/_structure.scss');
    @return null;
}
