//-------------------------------------------------------------------
// Typography
//-------------------------------------------------------------------

// @import url('https://fonts.googleapis.com/css?family=Roboto:100,100i,300,300i,400,400i,500,500i,700,700i,900,900i');

// Font Families
//-------------------------------------------------------------------

$font-family-primary: -apple-system, BlinkMacSystemFont, sans-serif;
$font-family-secondary: serif;

// Typographic Scale
//-------------------------------------------------------------------

$font-sizes: (
    xx-huge: 72px,
    x-huge: 56px,
    huge: 48px,
    xx-large: 32px,
    x-large: 24px,
    large: 18px,
    medium: 16px,
    small: 14px,
    x-small: 12px,
    xx-small: 11px,
);

@function font-size($font-size) {
    $size: map-get($font-sizes, $font-size);
    @return rem($size);
}


// Font Weights
//-------------------------------------------------------------------

$font-weights: (
    thin: 100,
    extra-light: 200,
    light: 300,
    regular: 400,
    medium: 500,
    semi-bold: 600,
    bold: 700,
    extra-bold: 800,
    black: 900,
);

@function font-weight($weight: regular) {
    $weight: map-get($font-weights, $weight);
    @return $weight;
}


// Line heights
//-------------------------------------------------------------------

$line-height-single: 1;
$line-height-small: 1.2;
$line-height-normal: 1.6;
$line-height-large: 1.8;

// Font Styles
//-------------------------------------------------------------------

// Find the style from the library and print out its properties
@mixin font($library, $style, $weight:regular) {
    $default-styles: map-get($library, default);
    $style: map-get($library, $style);

    @each $property, $value in $default-styles {
        #{$property}: $value;
    }

    @each $property, $value in $style {
        @if $property == $weight {
            font-weight: $value;
        }
        @else {
            @if ($property != regular) {
                @if ($property != strong) {
                    #{$property}: $value;
                }
            }
        }
    }

    %strong {
        font-weight: map-get($style, strong);
    }
}

@mixin strong() {
    @extend %strong !optional;
}

// Title Styles
//-------------------------------------------------------------------

$title: (
    default: (
        font-family: $font-family-primary,
        line-height:  $line-height-single,
    ),

    hero: (
        font-size: font-size(xx-huge),
        regular: font-weight(thin),
        strong: font-weight(medium),
    ),

    small: (
        font-size: font-size(small),
        regular: font-weight(semi-bold),
        strong: font-weight(black),
        text-transform: uppercase,
        letter-spacing: .4em,
    ),
);
