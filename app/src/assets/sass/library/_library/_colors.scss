//-------------------------------------------------------------------
// Colors
//-------------------------------------------------------------------

// Grayscale
//-------------------------------------------------------------------

$grayscale: (
    'white': hsl(255, 255, 255),
    10:    hsl(220, 10, 98),
    20:    hsl(220, 15, 90),
    30:    hsl(220, 20, 85),
    40:    hsl(220, 20, 70),
    50:    hsl(220, 20, 50),
    60:    hsl(220, 20, 40),
    80:    hsl(200, 20, 35),
    90:    hsl(220, 20, 20),
    100:   hsl(220, 20, 10),
    'black': hsl(0, 0, 0),
);

@function gray($gray, $alpha: 1) {
    @if map-has-key($grayscale, $gray) {
        $fill: rgba(map-get($grayscale, $gray), $alpha);
        @return $fill;
    }
    @warn "The value '#{$gray}' is not in the list of grays. See _colors.scss for details";
    @return null;
}

// Brand Colors
//-------------------------------------------------------------------

$colors: (
    blue: #0094ff,
    blue-light: #0094ff,
    blue-dark: #007aff,
    purple: #2714ff,
);

@function color($color, $alpha: 1) {
    @if map-has-key($colors, $color) {
        $fill: rgba(map-get($colors, $color), $alpha);
        @return $fill;
    }
    @warn "The value '#{$color}' is not in the list of colors. See _colors.scss for details";
    @return null;
}

// Utility Colours
//-------------------------------------------------------------------

$color-ui-error: #d8250e;
$color-ui-success: #79cf17;
$color-ui-warn: #fda832;
$color-ui-attention: #6e14e7;

// Font Colours
//-------------------------------------------------------------------

$font-colors: (
    dark: (
        base: gray(xx-dark, 0.8),
        strong: gray(xxx-dark),
        supporting: gray(dark, 0.8),
    ),
    light: (
        base: gray(xxx-light, 0.8),
        strong: gray(white),
        supporting: gray(xxx-light, 0.6),
    ),
    highlight: (
        base: color(blue),
        strong: color(blue-dark),
        supporting: color(blue-light),
    )
);

@mixin font-color($color, $shade: base) {
    @if map-has-key($font-colors, $color) {
        color: map-deep-get($font-colors, $color, $shade);
    }
    @else {
        @warn "The value '#{$color}' is not in the list of font-colors. See _colors.scss for details";
    }
}

// Gradients
//-------------------------------------------------------------------

// Fade gradient from a single color to transparent
@mixin gradient-fade($color, $angle: 0deg, $stop: 100%) {
    background: linear-gradient($angle, rgba($color, 0), $color $stop);
}
